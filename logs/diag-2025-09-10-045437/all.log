▶️  Iniciando diagnóstico 2025-09-10-045437

=== Contexto Git ===
## main...origin/main
 M components/ColorEmoji.tsx
 M components/EmojiTheme.tsx
 M eslint.config.mjs
?? lib/database.types.ts
?? logs/
?? supabase/.temp/
?? tsconfig.typecheck.json
69d1a2eeb0110ffcf0ccadcadc41835bb2cffa62
commit 69d1a2eeb0110ffcf0ccadcadc41835bb2cffa62
Author:     Sanoa <martin.maldonado32@gmail.com>
AuthorDate: Tue Sep 9 19:15:20 2025 +0000
Commit:     Sanoa <martin.maldonado32@gmail.com>
CommitDate: Tue Sep 9 19:15:20 2025 +0000

    nuevo commit

=== Versiones básicas ===
v22.17.0
9.8.1
10.13.1
1.22.22

  System:
    OS: Linux 6.8 Ubuntu 24.04.2 LTS 24.04.2 LTS (Noble Numbat)
    CPU: (2) x64 AMD EPYC 7763 64-Core Processor
    Memory: 5.46 GB / 7.76 GB
    Container: Yes
    Shell: 5.2.21 - /bin/bash
  Binaries:
    Node: 22.17.0 - ~/nvm/current/bin/node
    Yarn: 1.22.22 - /usr/bin/yarn
    npm: 9.8.1 - ~/nvm/current/bin/npm
    pnpm: 10.13.1 - ~/nvm/current/bin/pnpm


=== Paquetes del proyecto ===
{
  "deps": {
    "@radix-ui/react-label": "^2.1.7",
    "@radix-ui/react-slot": "^1.2.3",
    "@sentry/nextjs": "^10.11.0",
    "@supabase/auth-helpers-nextjs": "0.10.0",
    "@supabase/supabase-js": "2.57.2",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "html2canvas": "^1.4.1",
    "jspdf": "^3.0.2",
    "lucide-react": "^0.542.0",
    "next": "15.5.2",
    "react": "19.1.0",
    "react-dom": "19.1.0",
    "tailwind-merge": "^3.3.1",
    "tailwindcss-animate": "^1.0.7"
  },
  "devDeps": {
    "@eslint/eslintrc": "^3",
    "@tailwindcss/postcss": "^4",
    "@types/node": "^20.19.13",
    "@types/react": "^19.1.12",
    "@types/react-dom": "^19",
    "eslint": "^9.35.0",
    "eslint-config-next": "^15.5.2",
    "eslint-config-prettier": "^10.1.8",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^5.2.0",
    "prettier": "^3.6.2",
    "tailwindcss": "^4",
    "tw-animate-css": "^1.3.8",
    "typescript": "^5"
  }
}

=== Variables de entorno (enmascaradas) ===
--- .env.local ---
NEXT_PUBLIC_SUPABASE_URL=***MASKED***
NEXT_PUBLIC_SUPABASE_ANON_KEY=***MASKED***
NEXT_PUBLIC_SITE_URL=***MASKED***
NEXT_PUBLIC_APP_VERSION=***MASKED***
NEXT_PUBLIC_UPLOAD_MAX_MB=***MASKED***
NEXT_PUBLIC_UPLOAD_ALLOWED=***MASKED***
NEXT_PUBLIC_SIGNED_URL_TTL=***MASKED***
NEXT_PUBLIC_SENTRY_DSN=***MASKED***
NEXT_PUBLIC_SENTRY_ENV=***MASKED***

=== Configuración de Next/TS/ESLint ===
--- next.config.ts ---
import type { NextConfig } from "next";

const nextConfig: NextConfig = {
  /* config options here */
};

export default nextConfig;
--- tsconfig.json ---
{
  "compilerOptions": {
    "target": "ES2022",
    "lib": ["dom", "dom.iterable", "esnext"],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": true,
    "noEmit": true,
    "esModuleInterop": true,
    "module": "esnext",
    "moduleResolution": "bundler",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "incremental": true,
    "plugins": [{ "name": "next" }],
    "paths": {
      "@/*": ["./*"]
    },
    "baseUrl": "."
  },
  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts"],
  "exclude": ["node_modules"]
}
--- .eslintrc.json ---
{
  "root": true,
  "extends": ["next/core-web-vitals", "plugin:import/recommended", "prettier"],
  "plugins": ["import"],
  "rules": {
    "import/order": [
      "warn",
      { "newlines-between": "always", "alphabetize": { "order": "asc", "caseInsensitive": true } }
    ],
    "no-console": ["warn", { "allow": ["warn", "error"] }]
  }
}
--- .prettierrc.json ---
{
  "semi": true,
  "singleQuote": false,
  "printWidth": 100,
  "tabWidth": 2,
  "trailingComma": "all"
}

=== tsconfig efectivo (tsc --showConfig) ===
tsconfig efectivo guardado.

=== ESLint efectivo para un archivo conflictivo ===

=== Greps rápidos (pistas de errores) ===
-- usos de storage_key --
lib/database.types.ts:47:          storage_key: string;
lib/patient-files.ts:7:  storage_key: string;
lib/patient-files.ts:104:      storage_key: key,
lib/patient-files.ts:129:    .createSignedUrl(rec.storage_key, sec);
lib/patient-files.ts:140:    .select("id, storage_key")
lib/patient-files.ts:144:  const key = rec!.storage_key as string;
-- usos de EmojiPerItem --
components/EmojiTheme.tsx:10:  perEmoji?: Record<string, EmojiPerItem>; // overrides por emoji
-- imports getSupabaseClient (posible import incorrecto) --
app/(auth)/register/page.tsx:5:import { getSupabaseClient } from "@/lib/supabase/client";
app/(auth)/register/page.tsx:23:      const supabase = getSupabaseClient();
lib/supabase/client.ts:20:export const getSupabaseClient = getSupabaseAnon;
-- ocurrencias ': any' en TS/TSX --
app/(app)/pacientes/[id]/page.tsx:83:      } catch (e: any) {
app/(app)/pacientes/[id]/page.tsx:97:    } catch (e: any) {
app/(app)/pacientes/[id]/page.tsx:121:    } catch (e: any) {
app/(app)/pacientes/[id]/page.tsx:137:    } catch (e: any) {
app/(app)/pacientes/[id]/page.tsx:151:    } catch (e: any) {
app/(app)/pacientes/[id]/page.tsx:193:    } catch (e: any) {
app/(app)/pacientes/[id]/page.tsx:230:    } catch (e: any) {
app/(app)/pacientes/[id]/page.tsx:267:    } catch (err: any) {
app/(app)/pacientes/[id]/page.tsx:288:    } catch (err: any) {
app/(app)/pacientes/[id]/page.tsx:316:    } catch (e: any) {
app/(app)/pacientes/[id]/page.tsx:327:    } catch (e: any) {
app/(app)/pacientes/[id]/page.tsx:348:    } catch (e: any) {
app/(app)/pacientes/[id]/page.tsx:372:    } catch (err: any) {
app/(app)/pacientes/[id]/page.tsx:387:    } catch (e: any) {
app/(app)/pacientes/page.tsx:40:    } catch (e: any) {
app/(app)/test-ui/page.tsx:79:    } catch (e: any) {
app/(app)/test-ui/page.tsx:100:    } catch (e: any) {
app/(app)/test-ui/page.tsx:116:    } catch (e: any) {
app/(app)/test-ui/page.tsx:135:    } catch (e: any) {
app/(app)/test-ui/upload/page.tsx:49:    } catch (e: any) {
app/(app)/test-ui/upload/page.tsx:82:    } catch (e: any) {
app/(app)/test-ui/upload/page.tsx:95:    } catch (e: any) {
app/(app)/test-ui/upload/page.tsx:105:    } catch (e: any) {
app/(app)/test-ui/upload/page.tsx:120:    } catch (e: any) {
app/(app)/test-ui/upload/page.tsx:133:    } catch (e: any) {
app/instalar/page.tsx:34:    const handler = (e: any) => {
app/(auth)/register/page.tsx:35:    } catch (err: any) {
app/(auth)/update-password/page.tsx:64:      } catch (e: any) {
app/(auth)/update-password/page.tsx:81:    } catch (e: any) {
app/(auth)/reset-password/page.tsx:31:    } catch (err: any) {
lib/audit.ts:11:  data: any | null;
components/InstallPrompt.tsx:13:    const handler = (e: any) => {
components/OrgSwitcherBadge.tsx:23:    const onChanged = (e: any) => setCurrent(e.detail?.orgId || null);
components/OrgSwitcherBadge.tsx:41:    } catch (err: any) {
-- console.error(…) --
grep: Unmatched ( or \(
-- enums Gender tipado --

=== Snapshot de archivos relevantes (para revisar tipos/llamadas) ===
  ✓ lib/database.types.ts
  ✓ lib/supabase-browser.ts
  ✓ lib/supabase/client.ts
